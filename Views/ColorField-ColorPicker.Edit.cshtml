@model Lombiq.TrainingDemo.ViewModels.EditColorFieldViewModel
@using Lombiq.TrainingDemo.Settings;
@using OrchardCore.ContentManagement.Metadata.Models

@{
    var settings = Model.PartFieldDefinition.Settings.ToObject<ColorFieldSettings>();

    const string BlockName = "colorField";

    var pickerInputElementId = Html.IdFor(m => m.Value);
    var pickerElementId = $"{pickerInputElementId}-ColorPicker";
}

<script asp-name="Pickr" at="Head"></script>
<style asp-name="Lombiq.TrainingDemo.ColorPicker" at="Head"></style>

<fieldset class="form-group @BlockName @(BlockName)_editor_colorPicker">
    <legend class="@(BlockName)__displayName">@Model.PartFieldDefinition.DisplayName()</legend>

    <label asp-for="ColorName" class="@(BlockName)__label">@T["Color name"]</label>
    <input asp-for="ColorName" class="form-control @(BlockName)__input" />

    <div id="@pickerElementId" class="@(BlockName)__picker"></div>
    <input asp-for="Value" type="hidden" class="@(BlockName)__input" readonly />
    @if (!string.IsNullOrEmpty(settings.Hint))
    {
        <span class="hint @(BlockName)__hint">@settings.Hint</span>
    }
</fieldset>

<script at="Foot" type="text/javascript">
    //<![CDATA[
    (function () {
        new Pickr({
            el: "#@pickerElementId",
            default: '@Model.Value',
            components: {
                preview: true,
                opacity: true,
                hue: true,
                interaction: {
                    input: true,
                    clear: true,
                    save: true
                }
            },
            onSave(hsva) {
                document.getElementById("@pickerInputElementId").value = hsva ? hsva.toHEX().toString() : "";
            }
        });
    })();
    //]]>
</script>